name: Validate and/or commit simulator

on:
  issues:
    types: [labeled, edited]

jobs:
  validateCommit:
    name: Validate and/or commit simulator
    runs-on: ubuntu-latest # includes Docker
    if: |
      github.event.issue.state == 'open'
      && contains(github.event.issue.labels.*.name, 'Validate/submit simulator')
      && (
        github.event.action == 'edited'
        || (
            github.event.action == 'labeled'
            && github.event.label.name == 'Validate/submit simulator'
           )
        || (
            github.event.action == 'labeled'
            && github.event.label.name == 'Approved'
            && github.event.sender.login != 'biosimulators-daemon'
           )
      )
    steps:
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ runner.os }}-pip-${{ hashFiles('${GITHUB_WORKSPACE}/requirements.txt') }}-${{ hashFiles('${GITHUB_WORKSPACE}/requirements.optional.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip and setuptools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools

      - name: Install Java # for pyNeuroML
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '15'

      - name: Install Perl # for BioNetGen
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends perl

      - name: Install XPP
      # wget http://www.math.pitt.edu/~bard/bardware/xppaut_latest.tar.gz # math.pitt.edu went down, using an internet archive temporarily.
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends wget make gcc libx11-dev libc6-dev

          cd /tmp 
          wget https://web.archive.org/web/20210425172021/http://www.math.pitt.edu/~bard/bardware/xppaut_latest.tar.gz
          mkdir xpp
          tar zxvf xppaut_latest.tar.gz --directory xpp
          cd xpp
          make
          sudo make install

          cd /tmp
          rm xppaut_latest.tar.gz
          rm -r xpp

      - name: Install Go (for Singularity)
        uses: actions/setup-go@v3
        with:
          go-version: '^1.13.1' # The Go version to download (if necessary) and use.

      - name: Install Singularity # to validate that the Docker image can be converted into a Singularity image
        env:
          GO_VERSION: 1.17.2
          SINGULARITY_VERSION: 3.9.5
          OS: linux
          ARCH: amd64
        run: |
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            libseccomp-dev \
            pkg-config \
            squashfs-tools \
            cryptsetup

          wget https://dl.google.com/go/go$GO_VERSION.$OS-$ARCH.tar.gz
          sudo tar -C /usr/local -xzvf go$GO_VERSION.$OS-$ARCH.tar.gz
          rm go$GO_VERSION.$OS-$ARCH.tar.gz

          echo 'export PATH=/usr/local/go/bin:$PATH' >> ~/.bashrc
          source ~/.bashrc
          echo "/usr/local/go/bin" >> $GITHUB_PATH

          wget https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz
          tar -xzf singularity-ce-${SINGULARITY_VERSION}.tar.gz
          cd singularity-ce-${SINGULARITY_VERSION}

          ./mconfig
          make -C builddir
          sudo make -C builddir install

      - name: Checkout BioSimulators test suite
        uses: actions/checkout@v3
        with:
          repository: biosimulators/biosimulators_test_suite
          fetch-depth: 1
          ref: deploy

      - name: Install simulator validation utilities
        working-directory: ${{ github.workspace }}
        run: |
          python -m pip install git+https://github.com/biosimulators/RBApy.git#egg=rbapy
          python --version
          python -m pip freeze
          python -m pip install -e .[all]

      - name: Login into Docker registries
        run: |
          # Docker Hub
          docker login \
            --username ${{ secrets.DOCKER_HUB_USERNAME }} \
            --password ${{ secrets.DOCKER_HUB_TOKEN }}

          # BioSimulators Docker registry (GHCR)
          docker login ${{ secrets.DOCKER_REGISTRY_URL }} \
            --username ${{ secrets.DOCKER_REGISTRY_USERNAME }} \
            --password ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - id: validateCommitSimulator
        name: Validate and commit simulator
        uses: GabrielBB/xvfb-action@v1
        env:
          GH_REPO: ${{ github.repository }}
          GH_ACTION_RUN_ID: ${{ github.run_id }}
          GH_ISSUE_NUMBER: ${{ github.event.issue.number }}
          GH_ISSUES_USER: ${{ secrets.GH_ISSUES_USER }}
          GH_ISSUES_ACCESS_TOKEN: ${{ secrets.GH_ISSUES_ACCESS_TOKEN }}

          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

          BIOSIMULATORS_API_CLIENT_ID: ${{ secrets.BIOSIMULATORS_API_CLIENT_ID }}
          BIOSIMULATORS_API_CLIENT_SECRET: ${{ secrets.BIOSIMULATORS_API_CLIENT_SECRET }}
          # BIOSIMULATORS_API_ENDPOINT: https://api.biosimulators.dev/ # uncomment to use the dev deployment of the BioSimulators API

          RUNBIOSIMULATIONS_API_CLIENT_ID: ${{ secrets.RUNBIOSIMULATIONS_API_CLIENT_ID }}
          RUNBIOSIMULATIONS_API_CLIENT_SECRET: ${{ secrets.RUNBIOSIMULATIONS_API_CLIENT_SECRET }}
          # RUNBIOSIMULATIONS_API_ENDPOINT: https://api.biosimulations.dev/ # uncomment to use the dev deployment of the BioSimulators API
        with:
          working-directory: ${{ github.workspace }}
          run: python -c "from biosimulators_test_suite.exec_gh_action import ValidateCommitSimulatorGitHubAction; ValidateCommitSimulatorGitHubAction().run(); exit();"

      - name: Save test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: Validation test results
          path: ${{ github.workspace }}/.biosimulators-test-suite-results.json
          if-no-files-found: warn
