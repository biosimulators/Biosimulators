name: Validate and/or commit simulator

on:
  issues:
    types: [labeled, edited]

jobs:
  validateCommit:
    name: Validate and/or commit simulator
    runs-on: ubuntu-latest # includes Docker
    if: |
      github.event.issue.state == 'open'
      && contains(github.event.issue.labels.*.name, 'Validate/submit simulator')
      && (
        github.event.action == 'edited'
        || (
            github.event.action == 'labeled'
            && github.event.label.name == 'Validate/submit simulator'
           )
        || (
            github.event.action == 'labeled'
            && github.event.label.name == 'Approved'
            && github.event.sender.login != 'biosimulators-daemon'
           )
      )
    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Python
          key: ${{ runner.os }}-pip-${{ hashFiles('${GITHUB_WORKSPACE}/requirements.txt') }}-${{ hashFiles('${GITHUB_WORKSPACE}/requirements.optional.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip and setuptools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools

      - name: Install Singularity # to validate that the Docker image can be converted into a Singularity image
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.6.4

      - name: Checkout BioSimulators test suite
        uses: actions/checkout@v2
        with:
          repository: biosimulators/biosimulators_test_suite
          fetch-depth: 1
          ref: deploy

      - name: Install simulator validation utilities
        working-directory: ${{ github.workspace }}
        run: |
          python -m pip install -e .[all]

      - name: Login into Docker registries
        run: |
          # Docker Hub
          docker login \
            --username ${{ secrets.DOCKER_HUB_USERNAME }} \
            --password ${{ secrets.DOCKER_HUB_TOKEN }}

          # BioSimulators Docker registry (GHCR)
          docker login ${{ secrets.DOCKER_REGISTRY_URL }} \
            --username ${{ secrets.DOCKER_REGISTRY_USERNAME }} \
            --password ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - id: validateCommitSimulator
        name: Validate and commit simulator
        env:
          GH_REPO: ${{ github.repository }}
          GH_ACTION_RUN_ID: ${{ github.run_id }}
          GH_ISSUE_NUMBER: ${{ github.event.issue.number }}
          GH_ISSUES_USER: ${{ secrets.GH_ISSUES_USER }}
          GH_ISSUES_ACCESS_TOKEN: ${{ secrets.GH_ISSUES_ACCESS_TOKEN }}

          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

          BIOSIMULATORS_API_CLIENT_ID: ${{ secrets.BIOSIMULATORS_API_CLIENT_ID }}
          BIOSIMULATORS_API_CLIENT_SECRET: ${{ secrets.BIOSIMULATORS_API_CLIENT_SECRET }}
          # BIOSIMULATORS_API_ENDPOINT: https://api.biosimulators.dev/ # uncomment to use the dev deployment of the BioSimulators API

          RUNBIOSIMULATIONS_API_CLIENT_ID: ${{ secrets.RUNBIOSIMULATIONS_API_CLIENT_ID }}
          RUNBIOSIMULATIONS_API_CLIENT_SECRET: ${{ secrets.RUNBIOSIMULATIONS_API_CLIENT_SECRET }}
          # RUNBIOSIMULATIONS_API_ENDPOINT: https://run.api.biosimulations.dev/ # uncomment to use the dev deployment of the BioSimulators API
        working-directory: ${{ github.workspace }}
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            python -c "
              from biosimulators_test_suite.exec_gh_action import ValidateCommitSimulatorGitHubAction;
              ValidateCommitSimulatorGitHubAction().run();
              exit();
            "

      - name: Save test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: Validation test results
          path: ${{ github.workspace }}/.biosimulators-test-suite-results.json
          if-no-files-found: warn
